name: CI/CD

on:
  push:
    branches:
      - main

env:
  GCP_CLOUD_RUN_SERVICE_NAME: ${{ secrets.GCP_CLOUD_RUN_SERVICE_NAME }}
  GCP_CLOUD_RUN_PORT: ${{ secrets.GCP_CLOUD_RUN_PORT }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_ARTIFACT_REGISTRY_URL: asia-northeast1-docker.pkg.dev
  GCP_CLOUD_RUN_IMAGE: asia-northeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_CLOUD_RUN_SERVICE_NAME }}/${{ github.sha }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - uses: actions/setup-node@v4
        with:
          node-version: "18.6.0"
      - name: Install NPM dependencies
        run: yarn
      - name: Build
        run: yarn build
      # - name: ESLint
      #   run: yarn lint
      - uses: actions/upload-artifact@master
        with:
          name: pomodoro-api
          path: dist

  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      ############
      # CloudRun #
      ############
      - name: Checkout
        uses: actions/checkout@master
      - name: Download generated file from ci job
        uses: actions/download-artifact@master
        with:
          name: pomodoro-api
          path: dist
      - name: Create env file from Github secrets
        shell: bash
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: 'echo "$ENV_FILE" > .env'
      - name: Cat .env
        run: cat .env
      - name: Cat index.cjs
        run: cat dist/index.cjs
      - id: Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_JSON }}'
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 416.0.0'
      - name: Authorize Docker push
        run: gcloud auth configure-docker $GCP_ARTIFACT_REGISTRY_URL
      - name: Build and Push Container
        run: |-
          docker build -t $GCP_CLOUD_RUN_IMAGE .
          docker push $GCP_CLOUD_RUN_IMAGE
      - name: 'Deploy to CloudRun'
        run: |-
          gcloud run deploy $GCP_CLOUD_RUN_SERVICE_NAME \
            --image $GCP_CLOUD_RUN_IMAGE \
            --region $GCP_REGION\
            --port $GCP_CLOUD_RUN_PORT \
            --platform "managed" \
            --allow-unauthenticated \
            --quiet
