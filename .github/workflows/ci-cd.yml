name: CI/CD

on:
  push:
    branches:
      - main

env:
  GCP_CLOUD_RUN_SERVICE_NAME: ${{ secrets.GCP_CLOUD_RUN_SERVICE_NAME }}
  GCP_CLOUD_RUN_PORT: ${{ secrets.GCP_CLOUD_RUN_PORT }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_CLOUD_RUN_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - uses: actions/setup-node@v4
        with:
          node-version: "18.6.0"
      - name: Install NPM dependencies
        run: yarn
      - name: Build
        run: yarn build
      # - name: ESLint
      #   run: yarn lint
      - uses: actions/upload-artifact@master
        with:
          name: pomodoro-api
          path: dist

  cd:
    needs: ci
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      ############
      # CloudRun #
      ############
      - name: Checkout
        uses: actions/checkout@master
      - name: Download generated file from ci job
        uses: actions/download-artifact@master
        with:
          name: pomodoro-api
          path: dist
      - name: Generate .env file from Github Secrets
        run: echo "${{ secrets.APP_ENV_FILE }}" > .env

      - id: Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_JSON }}'
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 416.0.0'
      - name: Authorize Docker push
        run: gcloud auth configure-docker
      - name: Build and Push Container
        run: |-
          docker build -t ${{ env.GCP_CLOUD_RUN_IMAGE }} .
          docker push ${{ env.GCP_CLOUD_RUN_IMAGE }}
      - name: 'Deploy to CloudRun'
        run: |-
          gcloud run deploy ${{ env.GCP_CLOUD_RUN_SERVICE_NAME }} \
            --image ${{ env.GCP_CLOUD_RUN_IMAGE }} \
            --region ${{ env.GCP_REGION }} \
            --port ${{ env.GCP_CLOUD_RUN_PORT }} \
            --platform "managed" \
            --allow-unauthenticated \
            --quiet
